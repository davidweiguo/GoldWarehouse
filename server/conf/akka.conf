# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.
 
"akka" : {
        # reference.conf: 13
        #  Home directory of Akka, modules in the deploy directory will be loaded
        "home" : "",
        # application.conf: 12
        #  Log level used by the configured loggers (see "event-handlers") as soon
        #  as they have been started; before that, see "stdout-loglevel"
        #  Options: ERROR, WARNING, INFO, DEBUG
        #"loglevel" : "DEBUG",
        # reference.conf: 42
        #  Toggles whether the threads created by this ActorSystem should be daemons or not
        "daemonic" : "off",
        # application.conf: 18
        #"log-config-on-start" : "on",
        # reference.conf: 9
        "test" : {
            # reference.conf: 19
            #  duration to wait in expectMsg and friends outside of within() block by default
            "single-expect-default" : "3s",
            # reference.conf: 22
            #  The timeout that is added as an implicit by DefaultTimeout trait
            "default-timeout" : "5s",
            # reference.conf: 24
            "calling-thread-dispatcher" : {
                # reference.conf: 25
                "type" : "akka.testkit.CallingThreadDispatcherConfigurator"
            },
            # reference.conf: 16
            #  duration of EventFilter.intercept waits after the block is finished until
            #  all required messages are received
            "filter-leeway" : "3s",
            # reference.conf: 12
            #  factor by which to scale timeouts during tests, e.g. to account for shared
            #  build system load
            "timefactor" : 1
        },
        # reference.conf: 304
        #  Used to set the behavior of the scheduler.
        #  Changing the default values may change the system behavior drastically so make sure
        #  you know what you're doing! See the Scheduler section of the Akka documentation for more details.
        "scheduler" : {
            # reference.conf: 314
            "ticks-per-wheel" : 512,
            # reference.conf: 313
            #  The HashedWheelTimer (HWT) implementation from Netty is used as the default scheduler
            #  in the system.
            #  HWT does not execute the scheduled tasks on exact time.
            #  It will, on every tick, check if there are any tasks behind the schedule and execute them.
            #  You can increase or decrease the accuracy of the execution timing by specifying smaller
            #  or larger tick duration.
            #  If you are scheduling a lot of tasks you should consider increasing the ticks per wheel.
            #  For more information see: http://www.jboss.org/netty/
            "tick-duration" : "100ms"
        },
        # reference.conf: 21
        #  Event handlers are created and registered synchronously during ActorSystem
        #  start-up, and since they are actors, this timeout is used to bound the
        #  waiting time
        "event-handler-startup-timeout" : "5s",
        # application.conf: 47
        "remote" : {
            # application.conf: 48
            "server" : {
                # application.conf: 50
                #  The port clients should connect to. Default is 2552 (AKKA)
                "port" : 2562
            }
        },
        # merge of application.conf: 20,reference.conf: 47
        "actor" : {
            # reference.conf: 296
            #  Class to Serializer binding. You only need to specify the name of an interface
            #  or abstract base class of the messages. In case of ambiguity it is using the
            #  most specific configured class, or giving a warning and choosing the “first” one.
            # 
            #  To disable one of the default serializers, assign its class to "none", like
            #  "java.io.Serializable" = none
            "serialization-bindings" : {
                # reference.conf: 297
                "java.io.Serializable" : "java"
            },
            # reference.conf: 286
            #  Entries for pluggable serializers and their bindings.
            "serializers" : {
                # reference.conf: 287
                "java" : "akka.serialization.JavaSerializer"
            },
            # reference.conf: 52
            #  Timeout for ActorSystem.actorOf
            "creation-timeout" : "20s",
            # reference.conf: 64
            #  Serializes and deserializes creators (in Props) to ensure that they can be sent over the network,
            #  this is only intended for testing.
            "serialize-creators" : "off",
            # merge of application.conf: 21,reference.conf: 160
            "default-dispatcher" : {
                # reference.conf: 263
                #  For Actor with Stash: The default capacity of the stash.
                #  If negative (or zero) then an unbounded stash is used (default)
                #  If positive then a bounded stash is used and the capacity is set using the
                #  property
                "stash-capacity" : -1,
                # reference.conf: 252
                #  FQCN of the MailboxType, if not specified the default bounded or unbounded
                #  mailbox is used. The Class of the FQCN must have a constructor with
                #  (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
                "mailbox-type" : "",
                # reference.conf: 191
                #  This will be used if you have set "executor = "thread-pool-executor""
                "thread-pool-executor" : {
                    # reference.conf: 215
                    #  Specifies the bounded capacity of the task queue (< 1 == unbounded)
                    "task-queue-size" : -1,
                    # reference.conf: 193
                    #  Keep alive time for threads
                    "keep-alive-time" : "604800s",
                    # reference.conf: 206
                    #  Hint: max-pool-size is only used for bounded task queues
                    #  minimum number of threads to cap factor-based max number to
                    "max-pool-size-min" : 8,
                    # reference.conf: 212
                    #  Max number of threads to cap factor-based max number to
                    "max-pool-size-max" : 64,
                    # reference.conf: 199
                    #  No of core threads ... ceil(available processors * factor)
                    "core-pool-size-factor" : 3,
                    # reference.conf: 202
                    #  Max number of threads to cap factor-based number to
                    "core-pool-size-max" : 64,
                    # reference.conf: 209
                    #  Max no of threads ... ceil(available processors * factor)
                    "max-pool-size-factor" : 3,
                    # reference.conf: 196
                    #  Min number of threads to cap factor-based core number to
                    "core-pool-size-min" : 8,
                    # reference.conf: 222
                    #  Allow core threads to time out
                    "allow-core-timeout" : "off",
                    # reference.conf: 219
                    #  Specifies which type of task queue will be used, can be "array" or
                    #  "linked" (default)
                    "task-queue-type" : "linked"
                },
                # reference.conf: 257
                #  For BalancingDispatcher: If the balancing dispatcher should attempt to
                #  schedule idle actors using the same dispatcher when a message comes in,
                #  and the dispatchers ExecutorService is not fully busy already.
                "attempt-teamwork" : "on",
                # reference.conf: 179
                #  This will be used if you have set "executor = "fork-join-executor""
                "fork-join-executor" : {
                    # reference.conf: 184
                    #  Parallelism (threads) ... ceil(available processors * factor)
                    "parallelism-factor" : 3,
                    # reference.conf: 181
                    #  Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 8,
                    # reference.conf: 187
                    #  Max number of threads to cap factor-based parallelism number to
                    "parallelism-max" : 128
                },
                # reference.conf: 233
                #  Throughput deadline for Dispatcher, set to 0 or negative for no deadline
                "throughput-deadline-time" : "0ms",
                # reference.conf: 247
                #  Specifies the timeout to add a new message to a mailbox that is full -
                #  negative number means infinite timeout. It is only used for type=Dispatcher
                #  and only if mailbox-capacity > 0
                "mailbox-push-timeout-time" : "30s",
                # reference.conf: 242
                #  If negative (or zero) then an unbounded mailbox is used (default)
                #  If positive then a bounded mailbox is used and the capacity is set using the
                #  property
                #  NOTE: setting a mailbox to 'blocking' can be a bit dangerous, could lead to
                #  deadlock, use with care
                #  The following mailbox-push-timeout-time is only used for type=Dispatcher and
                #  only if mailbox-capacity > 0
                "mailbox-capacity" : -1,
                # reference.conf: 176
                #  Which kind of ExecutorService to use for this dispatcher
                #  Valid options:
                #                "fork-join-executor" requires a "fork-join-executor" section
                #                "thread-pool-executor" requires a "thread-pool-executor" section
                #                or
                #                A FQCN of a class extending ExecutorServiceConfigurator
                "executor" : "thread-pool-executor",
                # reference.conf: 226
                #  How long time the dispatcher will wait for new actors until it shuts down
                "shutdown-timeout" : "10s",
                # reference.conf: 168
                #  Must be one of the following
                #  Dispatcher, (BalancingDispatcher, only valid when all actors using it are of
                #  the same type), PinnedDispatcher, or a FQCN to a class inheriting
                #  MessageDispatcherConfigurator with a constructor with
                #  com.typesafe.config.Config parameter and akka.dispatch.DispatcherPrerequisites
                #  parameters.
                #  PinnedDispatcher must be used toghether with executor=thread-pool-executor.
                "type" : "Dispatcher",
                # application.conf: 23
                #  Throughput for default Dispatcher, set to 1 for as fair as possible
                "throughput" : 10
            },
            # reference.conf: 71
            "deployment" : {
                # reference.conf: 74
                #  deployment id pattern - on the format: /parent/child etc.
                "default" : {
                    # reference.conf: 109
                    #  Routers with dynamically resizable number of routees; this feature is enabled
                    #  by including (parts of) this section in the deployment
                    "resizer" : {
                        # reference.conf: 131
                        #  Percentage to increase capacity whenever all routees are busy.
                        #  For example, 0.2 would increase 20% (rounded up), i.e. if current
                        #  capacity is 6 it will request an increase of 2 more routees.
                        "rampup-rate" : 0.2,
                        # reference.conf: 151
                        #  When the resizer reduce the capacity the abandoned routee actors are stopped
                        #  with PoisonPill after this delay. The reason for the delay is to give concurrent
                        #  messages a chance to be placed in mailbox before sending PoisonPill.
                        #  Use 0s to skip delay.
                        "stop-delay" : "1s",
                        # reference.conf: 116
                        #  The most number of routees the router should ever have.
                        #  Must be greater than or equal to lower-bound.
                        "upper-bound" : 10,
                        # reference.conf: 155
                        #  Number of messages between resize operation.
                        #  Use 1 to resize before each message.
                        "messages-per-resize" : 10,
                        # reference.conf: 139
                        #  Minimum fraction of busy routees before backing off.
                        #  For example, if this is 0.3, then we'll remove some routees only when
                        #  less than 30% of routees are busy, i.e. if current capacity is 10 and
                        #  3 are busy then the capacity is unchanged, but if 2 or less are busy
                        #  the capacity is decreased.
                        #  Use 0.0 or negative to avoid removal of routees.
                        "backoff-threshold" : 0.3,
                        # reference.conf: 145
                        #  Fraction of routees to be removed when the resizer reaches the
                        #  backoffThreshold.
                        #  For example, 0.1 would decrease 10% (rounded up), i.e. if current
                        #  capacity is 9 it will request an decrease of 1 routee.
                        "backoff-rate" : 0.1,
                        # reference.conf: 112
                        #  The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf: 126
                        #  Threshold to evaluate if routee is considered to be busy (under pressure).
                        #  Implementation depends on this value (default is 1).
                        #  0:   number of routees currently processing a message.
                        #  1:   number of routees currently processing a message has
                        #       some messages in mailbox.
                        #  > 1: number of routees with at least the configured pressure-threshold
                        #       messages in their mailbox. Note that estimating mailbox size of
                        #       default UnboundedMailbox is O(N) operation.
                        "pressure-threshold" : 1
                    },
                    # reference.conf: 95
                    #  number of children to create in case of a non-direct router; this setting
                    #  is ignored if routees.paths is given
                    "nr-of-instances" : 1,
                    # reference.conf: 91
                    #  routing (load-balance) scheme to use
                    #      available: "from-code", "round-robin", "random", "smallest-mailbox", "scatter-gather", "broadcast"
                    #      or:        Fully qualified class name of the router class.
                    #                 The router class must extend akka.routing.CustomRouterConfig and and have constructor
                    #                 with com.typesafe.config.Config parameter.
                    #      default is "from-code";
                    #  Whether or not an actor is transformed to a Router is decided in code only (Props.withRouter).
                    #  The type of router can be overridden in the configuration; specifying "from-code" means
                    #  that the values specified in the code shall be used.
                    #  In case of routing, the actors to be routed to can be specified
                    #  in several ways:
                    #  - nr-of-instances: will create that many children
                    #  - routees.paths: will look the paths up using actorFor and route to
                    #    them, i.e. will not create children
                    #  - resizer: dynamically resizable number of routees as specified in resizer below
                    "router" : "from-code",
                    # reference.conf: 98
                    #  within is the timeout used for routers containing future calls
                    "within" : "5 seconds",
                    # reference.conf: 100
                    "routees" : {
                        # reference.conf: 104
                        #  Alternatively to giving nr-of-instances you can specify the full
                        #  paths of those actors which should be routed to. This setting takes
                        #  precedence over nr-of-instances
                        "paths" : []
                    }
                }
            },
            # reference.conf: 49
            "provider" : "akka.actor.LocalActorRefProvider",
            # application.conf: 26
            #  reference.conf: 266
            "debug" : {
                # application.conf: 32
                #  reference.conf: 273
                #   enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
                "autoreceive" : "on",
                # application.conf: 29
                #  reference.conf: 282
                #   enable DEBUG logging of subscription changes on the eventStream
                "event-stream" : "on",
                # application.conf: 35
                #  reference.conf: 276
                #   enable DEBUG logging of actor lifecycle changes
                "lifecycle" : "on",
                # application.conf: 38
                #  reference.conf: 279
                #   enable DEBUG logging of all LoggingFSMs for events, transitions and timers
                "fsm" : "on",
                # application.conf: 43
                #  reference.conf: 270
                #   enable function of Actor.loggable(), which is to log any received message at
                #   DEBUG level, see the “Testing Actor Systems” section of the Akka Documentation
                #   at http://akka.io/docs
                "receive" : "on"
            },
            # reference.conf: 66
            "typed" : {
                # reference.conf: 68
                #  Default timeout for typed actor methods with non-void return type
                "timeout" : "5s"
            },
            # reference.conf: 56
            #  frequency with which stopping actors are prodded in case they had to be
            #  removed from their parents
            "reaper-interval" : "5s",
            # reference.conf: 60
            #  Serializes and deserializes (non-primitive) messages to ensure immutability,
            #  this is only intended for testing.
            "serialize-messages" : "off"
        },
        # reference.conf: 45
        #  JVM shutdown, System.exit(-1), in case of a fatal error, such as OutOfMemoryError
        "jvm-exit-on-fatal-error" : "on",
        # reference.conf: 39
        #  List FQCN of extensions which shall be loaded at actor system startup.
        #  Should be on the format: 'extensions = ["foo", "bar"]' etc.
        #  See the Akka Documentation for more info about Extensions
        "extensions" : [],
        # reference.conf: 10
        #  Akka version, checked against the runtime version of Akka.
        "version" : "2.3.9"
        # application.conf: 16
        #  Log level for the very basic logger activated during AkkaApplication startup
        #  Options: ERROR, WARNING, INFO, DEBUG
        #"stdout-loglevel" : "DEBUG",
        # application.conf: 7
        #  Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
        #"event-handlers" : [
            # application.conf: 7
        #    "akka.event.slf4j.Slf4jEventHandler"
        #]
    }